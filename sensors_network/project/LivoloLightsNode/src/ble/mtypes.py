#!/usr/bin/env python3

# Message Types
M_PRESENTATION    = 0  # Sent by a node when they present attached sensors. This is usually done in setup() at startup.
M_SET             = 1  # This message is sent from or to a sensor when a sensor value should be updated
M_REQ             = 2  # Requests a variable value (usually from an actuator destined for controller).
M_INTERNAL        = 3  # This is a special internal message. See table below for the details
M_STREAM          = 4  # Used for OTA firmware updates

message_types = {}
message_types[0] = 'M_PRESENTATION'
message_types[1] = 'M_SET'
message_types[2] = 'M_REQ'
message_types[3] = 'M_INTERNAL'
message_types[4] = 'M_STREAM'
message_types['M_PRESENTATION'] = M_PRESENTATION
message_types['M_SET'] = M_SET
message_types['M_REQ'] = M_REQ
message_types['M_INTERNAL'] = M_INTERNAL
message_types['M_STREAM'] = M_STREAM

# SubTypes for MessageType M_PRESENTATION #
S_DOOR                     = 0   # Door and window sensors
S_MOTION                   = 1   # Motion sensors
S_SMOKE                    = 2   # Smoke sensor
S_LIGHT                    = 3   # Light Actuator (on/off)
S_BINARY                   = 3   # Binary device (on/off), Alias for S_LIGHT
S_DIMMER                   = 4   # Dimmable device of some kind
S_COVER                    = 5   # Window covers or shades
S_TEMP                     = 6   # Temperature sensor
S_HUM                      = 7   # Humidity sensor
S_BARO                     = 8   # Barometer sensor (Pressure)
S_WIND                     = 9   # Wind sensor
S_RAIN                     = 10  # Rain sensor
S_UV                       = 11  # UV sensor
S_WEIGHT                   = 12  # Weight sensor for scales etc.
S_POWER                    = 13  # Power measuring device, like power meters
S_HEATER                   = 14  # Heater device
S_DISTANCE                 = 15  # Distance sensor
S_LIGHT_LEVEL              = 16  # Light sensor
S_ARDUINO_NODE             = 17  # Arduino node device
S_ARDUINO_REPEATER_NODE    = 18  # Arduino repeating node device
S_LOCK                     = 19  # Lock device
S_IR                       = 20  # Ir sender/receiver device
S_WATER                    = 21  # Water meter
S_AIR_QUALITY              = 22  # Air quality sensor e.g. MQ-2
S_CUSTOM                   = 23  # Use this for custom sensors where no other fits.
S_DUST                     = 24  # Dust level sensor
S_SCENE_CONTROLLER         = 25  # Scene controller device
S_RGB_LIGHT                = 26  # RGB light
S_RGBW_LIGHT               = 27  # RGBW light (with separate white component)
S_COLOR_SENSOR             = 28  # Color sensor
S_HVAC                     = 29  # Thermostat/HVAC device
S_MULTIMETER               = 30  # Multimeter device
S_SPRINKLER                = 31  # Sprinkler device
S_WATER_LEAK               = 32  # Water leak sensor
S_SOUND                    = 33  # Sound sensor
S_VIBRATION                = 34  # Vibration sensor
S_MOISTURE                 = 35  # Moisture sensor

presentation_sub_types = {}
presentation_sub_types[0] = 'S_DOOR'
presentation_sub_types['S_DOOR'] = S_DOOR
presentation_sub_types[1] = 'S_MOTION'
presentation_sub_types['S_MOTION'] = S_MOTION
presentation_sub_types[2] = 'S_SMOKE'
presentation_sub_types['S_SMOKE'] = S_SMOKE
presentation_sub_types[3] = 'S_LIGHT'
presentation_sub_types['S_LIGHT'] = S_LIGHT
presentation_sub_types[3] = 'S_BINARY'
presentation_sub_types['S_BINARY'] = S_BINARY
presentation_sub_types[4] = 'S_DIMMER'
presentation_sub_types['S_DIMMER'] = S_DIMMER
presentation_sub_types[5] = 'S_COVER'
presentation_sub_types['S_COVER'] = S_COVER
presentation_sub_types[6] = 'S_TEMP'
presentation_sub_types['S_TEMP'] = S_TEMP
presentation_sub_types[7] = 'S_HUM'
presentation_sub_types['S_HUM'] = S_HUM
presentation_sub_types[8] = 'S_BARO'
presentation_sub_types['S_BARO'] = S_BARO
presentation_sub_types[9] = 'S_WIND'
presentation_sub_types['S_WIND'] = S_WIND
presentation_sub_types[10] = 'S_RAIN'
presentation_sub_types['S_RAIN'] = S_RAIN
presentation_sub_types[11] = 'S_UV'
presentation_sub_types['S_UV'] = S_UV
presentation_sub_types[12] = 'S_WEIGHT'
presentation_sub_types['S_WEIGHT'] = S_WEIGHT
presentation_sub_types[13] = 'S_POWER'
presentation_sub_types['S_POWER'] = S_POWER
presentation_sub_types[14] = 'S_HEATER'
presentation_sub_types['S_HEATER'] = S_HEATER
presentation_sub_types[15] = 'S_DISTANCE'
presentation_sub_types['S_DISTANCE'] = S_DISTANCE
presentation_sub_types[16] = 'S_LIGHT_LEVEL'
presentation_sub_types['S_LIGHT_LEVEL'] = S_LIGHT_LEVEL
presentation_sub_types[17] = 'S_ARDUINO_NODE'
presentation_sub_types['S_ARDUINO_NODE'] = S_ARDUINO_NODE
presentation_sub_types[18] = 'S_ARDUINO_REPEATER_NODE'
presentation_sub_types['S_ARDUINO_REPEATER_NODE'] = S_ARDUINO_REPEATER_NODE
presentation_sub_types[19] = 'S_LOCK'
presentation_sub_types['S_LOCK'] = S_LOCK
presentation_sub_types[20] = 'S_IR'
presentation_sub_types['S_IR'] = S_IR
presentation_sub_types[21] = 'S_WATER'
presentation_sub_types['S_WATER'] = S_WATER
presentation_sub_types[22] = 'S_AIR_QUALITY'
presentation_sub_types['S_AIR_QUALITY'] = S_AIR_QUALITY
presentation_sub_types[23] = 'S_CUSTOM'
presentation_sub_types['S_CUSTOM'] = S_CUSTOM
presentation_sub_types[24] = 'S_DUST'
presentation_sub_types['S_DUST'] = S_DUST
presentation_sub_types[25] = 'S_SCENE_CONTROLLER'
presentation_sub_types['S_SCENE_CONTROLLER'] = S_SCENE_CONTROLLER
presentation_sub_types[26] = 'S_RGB_LIGHT'
presentation_sub_types['S_RGB_LIGHT'] = S_RGB_LIGHT
presentation_sub_types[27] = 'S_RGBW_LIGHT'
presentation_sub_types['S_RGBW_LIGHT'] = S_RGBW_LIGHT
presentation_sub_types[28] = 'S_COLOR_SENSOR'
presentation_sub_types['S_COLOR_SENSOR'] = S_COLOR_SENSOR
presentation_sub_types[29] = 'S_HVAC'
presentation_sub_types['S_HVAC'] = S_HVAC
presentation_sub_types[30] = 'S_MULTIMETER'
presentation_sub_types['S_MULTIMETER'] = S_MULTIMETER
presentation_sub_types[31] = 'S_SPRINKLER'
presentation_sub_types['S_SPRINKLER'] = S_SPRINKLER
presentation_sub_types[32] = 'S_WATER_LEAK'
presentation_sub_types['S_WATER_LEAK'] = S_WATER_LEAK
presentation_sub_types[33] = 'S_SOUND'
presentation_sub_types['S_SOUND'] = S_SOUND
presentation_sub_types[34] = 'S_VIBRATION'
presentation_sub_types['S_VIBRATION'] = S_VIBRATION
presentation_sub_types[35] = 'S_MOISTURE'
presentation_sub_types['S_MOISTURE'] = S_MOISTURE

# SubTypes for MessageType M_SET #
V_TEMP                  = 0   # Temperature
V_HUM                   = 1   # Humidity
V_STATUS                = 2   # Binary status. 0=off 1=on
V_LIGHT                 = 2   # Deprecated. Alias for V_STATUS. Light status. 0=off 1=on
V_PERCENTAGE            = 3   # Percentage value. 0-100 (%)
V_DIMMER                = 3   # Deprecated. Alias for V_PERCENTAGE. Dimmer value. 0-100 (%)
V_PRESSURE              = 4   # Atmospheric Pressure
V_FORECAST              = 5   # Weather forecast. One of "stable", "sunny", "cloudy", "unstable", "thunderstorm" or "unknown"
V_RAIN                  = 6   # Amount of rain
V_RAINRATE              = 7   # Rate of rain
V_WIND                  = 8   # Windspeed
V_GUST                  = 9   # Gust
V_DIRECTION             = 10  # Wind direction
V_UV                    = 11  # UV light level
V_WEIGHT                = 12  # Weight (for scales etc)
V_DISTANCE              = 13  # Distance
V_IMPEDANCE             = 14  # Impedance value
V_ARMED                 = 15  # Armed status of a security sensor. 1=Armed, 0=Bypassed
V_TRIPPED               = 16  # Tripped status of a security sensor. 1=Tripped, 0=Untripped
V_WATT                  = 17  # Watt value for power meters
V_KWH                   = 18  # Accumulated number of KWH for a power meter
V_SCENE_ON              = 19  # Turn on a scene
V_SCENE_OFF             = 20  # Turn of a scene
V_HVAC_FLOW_STATE       = 21  # Mode of header. One of "Off", "HeatOn", "CoolOn", or "AutoChangeOver"
V_HVAC_SPEED            = 22  # HVAC/Heater fan speed ("Min", "Normal", "Max", "Auto")
V_LIGHT_LEVEL           = 23  # Uncalibrated light level. 0-100%. Use V_LEVEL for light level in lux.
V_VAR1                  = 24  # Custom value
V_VAR2                  = 25  # Custom value
V_VAR3                  = 26  # Custom value
V_VAR4                  = 27  # Custom value
V_VAR5                  = 28  # Custom value
V_UP                    = 29  # Window covering. Up.
V_DOWN                  = 30  # Window covering. Down.
V_STOP                  = 31  # Window covering. Stop.
V_IR_SEND               = 32  # Send out an IR-command
V_IR_RECEIVE            = 33  # This message contains a received IR-command
V_FLOW                  = 34  # Flow of water (in meter)
V_VOLUME                = 35  # Water volume
V_LOCK_STATUS           = 36  # Set or get lock status. 1=Locked, 0=Unlocked
V_LEVEL                 = 37  # Used for sending level-value
V_VOLTAGE               = 38  # Voltage level
V_CURRENT               = 39  # Current level
V_RGB                   = 40  # RGB value transmitted as ASCII hex string (I.e "ff0000" for red)
V_RGBW                  = 41  # RGBW value transmitted as ASCII hex string (I.e "ff0000ff" for red + full white)
V_ID                    = 42  # Optional unique sensor id (e.g. OneWire DS1820b ids)
V_UNIT_PREFIX           = 43  # Allows sensors to send in a string representing the unit prefix to be displayed in GUI. This is not parsed by controller! E.g. cm, m, km, inch.
V_HVAC_SETPOINT_COOL    = 44  # HVAC cold setpoint
V_HVAC_SETPOINT_HEAT    = 45  # HVAC/Heater setpoint
V_HVAC_FLOW_MODE        = 46  # Flow mode for HVAC ("Auto", "ContinuousOn", "PeriodicOn")

set_sub_types = {}
set_sub_types[0] = 'V_TEMP'
set_sub_types['V_TEMP'] = V_TEMP
set_sub_types[1] = 'V_HUM'
set_sub_types['V_HUM'] = V_HUM
set_sub_types[2] = 'V_STATUS'
set_sub_types['V_STATUS'] = V_STATUS
set_sub_types[2] = 'V_LIGHT'
set_sub_types['V_LIGHT'] = V_LIGHT
set_sub_types[3] = 'V_PERCENTAGE'
set_sub_types['V_PERCENTAGE'] = V_PERCENTAGE
set_sub_types[3] = 'V_DIMMER'
set_sub_types['V_DIMMER'] = V_DIMMER
set_sub_types[4] = 'V_PRESSURE'
set_sub_types['V_PRESSURE'] = V_PRESSURE
set_sub_types[5] = 'V_FORECAST'
set_sub_types['V_FORECAST'] = V_FORECAST
set_sub_types[6] = 'V_RAIN'
set_sub_types['V_RAIN'] = V_RAIN
set_sub_types[7] = 'V_RAINRATE'
set_sub_types['V_RAINRATE'] = V_RAINRATE
set_sub_types[8] = 'V_WIND'
set_sub_types['V_WIND'] = V_WIND
set_sub_types[9] = 'V_GUST'
set_sub_types['V_GUST'] = V_GUST
set_sub_types[10] = 'V_DIRECTION'
set_sub_types['V_DIRECTION'] = V_DIRECTION
set_sub_types[11] = 'V_UV'
set_sub_types['V_UV'] = V_UV
set_sub_types[12] = 'V_WEIGHT'
set_sub_types['V_WEIGHT'] = V_WEIGHT
set_sub_types[13] = 'V_DISTANCE'
set_sub_types['V_DISTANCE'] = V_DISTANCE
set_sub_types[14] = 'V_IMPEDANCE'
set_sub_types['V_IMPEDANCE'] = V_IMPEDANCE
set_sub_types[15] = 'V_ARMED'
set_sub_types['V_ARMED'] = V_ARMED
set_sub_types[16] = 'V_TRIPPED'
set_sub_types['V_TRIPPED'] = V_TRIPPED
set_sub_types[17] = 'V_WATT'
set_sub_types['V_WATT'] = V_WATT
set_sub_types[18] = 'V_KWH'
set_sub_types['V_KWH'] = V_KWH
set_sub_types[19] = 'V_SCENE_ON'
set_sub_types['V_SCENE_ON'] = V_SCENE_ON
set_sub_types[20] = 'V_SCENE_OFF'
set_sub_types['V_SCENE_OFF'] = V_SCENE_OFF
set_sub_types[21] = 'V_HVAC_FLOW_STATE'
set_sub_types['V_HVAC_FLOW_STATE'] = V_HVAC_FLOW_STATE
set_sub_types[22] = 'V_HVAC_SPEED'
set_sub_types['V_HVAC_SPEED'] = V_HVAC_SPEED
set_sub_types[23] = 'V_LIGHT_LEVEL'
set_sub_types['V_LIGHT_LEVEL'] = V_LIGHT_LEVEL
set_sub_types[24] = 'V_VAR1'
set_sub_types['V_VAR1'] = V_VAR1
set_sub_types[25] = 'V_VAR2'
set_sub_types['V_VAR2'] = V_VAR2
set_sub_types[26] = 'V_VAR3'
set_sub_types['V_VAR3'] = V_VAR3
set_sub_types[27] = 'V_VAR4'
set_sub_types['V_VAR4'] = V_VAR4
set_sub_types[28] = 'V_VAR5'
set_sub_types['V_VAR5'] = V_VAR5
set_sub_types[29] = 'V_UP'
set_sub_types['V_UP'] = V_UP
set_sub_types[30] = 'V_DOWN'
set_sub_types['V_DOWN'] = V_DOWN
set_sub_types[31] = 'V_STOP'
set_sub_types['V_STOP'] = V_STOP
set_sub_types[32] = 'V_IR_SEND'
set_sub_types['V_IR_SEND'] = V_IR_SEND
set_sub_types[33] = 'V_IR_RECEIVE'
set_sub_types['V_IR_RECEIVE'] = V_IR_RECEIVE
set_sub_types[34] = 'V_FLOW'
set_sub_types['V_FLOW'] = V_FLOW
set_sub_types[35] = 'V_VOLUME'
set_sub_types['V_VOLUME'] = V_VOLUME
set_sub_types[36] = 'V_LOCK_STATUS'
set_sub_types['V_LOCK_STATUS'] = V_LOCK_STATUS
set_sub_types[37] = 'V_LEVEL'
set_sub_types['V_LEVEL'] = V_LEVEL
set_sub_types[38] = 'V_VOLTAGE'
set_sub_types['V_VOLTAGE'] = V_VOLTAGE
set_sub_types[39] = 'V_CURRENT'
set_sub_types['V_CURRENT'] = V_CURRENT
set_sub_types[40] = 'V_RGB'
set_sub_types['V_RGB'] = V_RGB
set_sub_types[41] = 'V_RGBW'
set_sub_types['V_RGBW'] = V_RGBW
set_sub_types[42] = 'V_ID'
set_sub_types['V_ID'] = V_ID
set_sub_types[43] = 'V_UNIT_PREFIX'
set_sub_types['V_UNIT_PREFIX'] = V_UNIT_PREFIX
set_sub_types[44] = 'V_HVAC_SETPOINT_COOL'
set_sub_types['V_HVAC_SETPOINT_COOL'] = V_HVAC_SETPOINT_COOL
set_sub_types[45] = 'V_HVAC_SETPOINT_HEAT'
set_sub_types['V_HVAC_SETPOINT_HEAT'] = V_HVAC_SETPOINT_HEAT
set_sub_types[46] = 'V_HVAC_FLOW_MODE'
set_sub_types['V_HVAC_FLOW_MODE'] = V_HVAC_FLOW_MODE

# SubTypes for MessageType M_INTERNAL #
I_BATTERY_LEVEL           = 0   # Use this to report the battery level (in percent 0-100).
I_TIME                    = 1   # Sensors can request the current time from the Controller using this message. The time will be reported as the seconds since 1970
I_VERSION                 = 2   # Used to request gateway version from controller.
I_ID_REQUEST              = 3   # Use this to request a unique node id from the controller.
I_ID_RESPONSE             = 4   # Id response back to sensor. Payload contains sensor id.
I_INCLUSION_MODE          = 5   # Start/stop inclusion mode of the Controller (1=start, 0=stop).
I_CONFIG                  = 6   # Config request from node. Reply with (M)etric or (I)mperal back to sensor.
I_FIND_PARENT             = 7   # When a sensor starts up, it broadcast a search request to all neighbor nodes. They reply with a I_FIND_PARENT_RESPONSE.
I_FIND_PARENT_RESPONSE    = 8   # Reply message type to I_FIND_PARENT request.
I_LOG_MESSAGE             = 9   # Sent by the gateway to the Controller to trace-log a message
I_CHILDREN                = 10  # A message that can be used to transfer child sensors (from EEPROM routing table) of a repeating node.
I_SKETCH_NAME             = 11  # Optional sketch name that can be used to identify sensor in the Controller GUI
I_SKETCH_VERSION          = 12  # Optional sketch version that can be reported to keep track of the version of sensor in the Controller GUI.
I_REBOOT                  = 13  # Used by OTA firmware updates. Request for node to reboot.
I_GATEWAY_READY           = 14  # Send by gateway to controller when startup is complete.
I_REQUEST_SIGNING         = 15  # Used between sensors when initialting signing.
I_GET_NONCE               = 16  # Used between sensors when requesting nonce.
I_GET_NONCE_RESPONSE      = 17  # Used between sensors for nonce response.

internal_sub_types = {}
internal_sub_types[0] = 'I_BATTERY_LEVEL'
internal_sub_types['I_BATTERY_LEVEL'] = I_BATTERY_LEVEL
internal_sub_types[1] = 'I_TIME'
internal_sub_types['I_TIME'] = I_TIME
internal_sub_types[2] = 'I_VERSION'
internal_sub_types['I_VERSION'] = I_VERSION
internal_sub_types[3] = 'I_ID_REQUEST'
internal_sub_types['I_ID_REQUEST'] = I_ID_REQUEST
internal_sub_types[4] = 'I_ID_RESPONSE'
internal_sub_types['I_ID_RESPONSE'] = I_ID_RESPONSE
internal_sub_types[5] = 'I_INCLUSION_MODE'
internal_sub_types['I_INCLUSION_MODE'] = I_INCLUSION_MODE
internal_sub_types[6] = 'I_CONFIG'
internal_sub_types['I_CONFIG'] = I_CONFIG
internal_sub_types[7] = 'I_FIND_PARENT'
internal_sub_types['I_FIND_PARENT'] = I_FIND_PARENT
internal_sub_types[8] = 'I_FIND_PARENT_RESPONSE'
internal_sub_types['I_FIND_PARENT_RESPONSE'] = I_FIND_PARENT_RESPONSE
internal_sub_types[9] = 'I_LOG_MESSAGE'
internal_sub_types['I_LOG_MESSAGE'] = I_LOG_MESSAGE
internal_sub_types[10] = 'I_CHILDREN'
internal_sub_types['I_CHILDREN'] = I_CHILDREN
internal_sub_types[11] = 'I_SKETCH_NAME'
internal_sub_types['I_SKETCH_NAME'] = I_SKETCH_NAME
internal_sub_types[12] = 'I_SKETCH_VERSION'
internal_sub_types['I_SKETCH_VERSION'] = I_SKETCH_VERSION
internal_sub_types[13] = 'I_REBOOT'
internal_sub_types['I_REBOOT'] = I_REBOOT
internal_sub_types[14] = 'I_GATEWAY_READY'
internal_sub_types['I_GATEWAY_READY'] = I_GATEWAY_READY
internal_sub_types[15] = 'I_REQUEST_SIGNING'
internal_sub_types['I_REQUEST_SIGNING'] = I_REQUEST_SIGNING
internal_sub_types[16] = 'I_GET_NONCE'
internal_sub_types['I_GET_NONCE'] = I_GET_NONCE
internal_sub_types[17] = 'I_GET_NONCE_RESPONSE'
internal_sub_types['I_GET_NONCE_RESPONSE'] = I_GET_NONCE_RESPONSE
